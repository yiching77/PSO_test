----------  Turn Left  ------------------
TurnLeft_X = -1400
TurnLeft_Y = 0
TurnLeft_Z = 0
TurnLeft_Theta = 10
TurnLeft_Mode = 5;Single_wood
TurnLeft_IMU = 3;Roll
----------  Turn Right  -----------------
TurnRight_X = -1400
TurnRight_Y = 0
TurnRight_Z = 0
TurnRight_Theta = -10
TurnRight_Mode = 5;Single_wood
TurnRight_IMU = 3;Roll
----------  Big Go Ahead  ---------------
BigGOAhead_X = 3460
BigGOAhead_Y = 0
BigGOAhead_Z = 0
BigGOAhead_Theta = -1
BigGOAhead_Mode = 6;Single_third
BigGOAhead_IMU = 1;Roll
----------  Middle Go Ahead  ------------
MiddleGOAhead_X = 2320
MiddleGOAhead_Y = 0
MiddleGOAhead_Z = 0
MiddleGOAhead_Theta = -5
MiddleGOAhead_Mode = 6;Single_third
MiddleGOAhead_IMU = 1;Roll
----------  Small Go Ahead  -------------
SmallGOAhead_X = 1000
SmallGOAhead_Y = 0
SmallGOAhead_Z = 0
SmallGOAhead_Theta = -1
SmallGOAhead_Mode = 0;Single
SmallGOAhead_IMU = 0;No
----------  Tiny Go Ahead  --------------
TinyGOAhead_X = -300
TinyGOAhead_Y = 0
TinyGOAhead_Z = 0
TinyGOAhead_Theta = -1
TinyGOAhead_Mode = 0;Single
TinyGOAhead_IMU = 0;No
----------  Right Shift  ----------------
RightShift_X = -200;-1180
RightShift_Y = -600
RightShift_Z = 0
RightShift_Theta = -1;
RightShift_Mode = 0;Single
RightShift_IMU = 2;X
----------  Left Shift  -----------------
LeftShift_X = -160
LeftShift_Y = 600
LeftShift_Z = 0
LeftShift_Theta = 0
LeftShift_Mode = 5;Single_wood
LeftShift_IMU = 2;X
----------  Left Turn Value  ------------
TurnLeftValue_Small = 6
TurnLeftValue_Middle = 8
TurnLeftValue_BIG = 10
TurnLeftValue_Huge = 14
----------  Right Turn Value  -----------
TurnRightValue_Small = -6
TurnRightValue_Middle = -8
TurnRightValue_BIG = -10
TurnRightValue_Huge = -14

;SingleStep,                  0
;ContinuousStep,              1
;LC_Step,                     2
;LC_Down,                     3
;LongJump,                    4
;Single_wood,                 5
;Single_third,                6
;ContinuousStep_second        7
;ContinuousStep_third         8

;None,         //without imu
;Roll,         //only roll	y
;Pitch,        //only pitch	x
;RollPitch     //roll & pitch
